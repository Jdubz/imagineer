import{r as p,j as e,l as j,u as G,a as k}from"./index-1.0.1-Bc4FHz3R.js";import{u as P}from"./useAbortableEffect-1.0.1-DbR3AQAQ.js";const O=a=>{if(a&&typeof a=="object"){const l=a;return{current:typeof l.current=="number"?l.current:void 0,total:typeof l.total=="number"?l.total:void 0,message:typeof l.message=="string"?l.message:void 0}}},M=({albumId:a,imageId:l,onComplete:t,variant:u="default"})=>{const[d,n]=p.useState(!1),[s,c]=p.useState(""),[x,_]=p.useState(0),[w,N]=p.useState(null),I=p.useRef(null),v=l?`image #${l}`:`album #${a}`;p.useEffect(()=>()=>{I.current&&window.clearInterval(I.current)},[]);const T=()=>{n(!1),_(0),N(null),I.current&&(window.clearInterval(I.current),I.current=null)},o=g=>{c(g),T()},b=g=>{I.current=window.setInterval(async()=>{try{const m=await fetch(`/api/labeling/tasks/${g}`,{credentials:"include"});if(!m.ok)throw new Error("Failed to fetch task status");const L=await m.json(),i=L.state??"PENDING";if(i==="SUCCESS"){if(c("Labeling complete!"),_(100),I.current&&(window.clearInterval(I.current),I.current=null),t)try{await t()}catch(r){j.error("Labeling onComplete handler failed:",r)}setTimeout(()=>{c(""),T()},1500)}else if(i==="FAILURE"){const r=L.result&&typeof L.result=="object"&&"message"in L.result?String(L.result.message):"Labeling failed";o(r)}else if(i==="PROGRESS"){const r=O(L.progress)??O(L.result)??{},{current:y,total:E,message:h}=r;typeof y=="number"&&typeof E=="number"&&E>0?(_(Math.min(100,Math.round(y/E*100))),c(`Labeled ${y} of ${E} images...`)):c(h?String(h):"Labeling in progress...")}else c(`Status: ${i}`)}catch(m){j.error("Polling error:",m),o("Failed to poll labeling status")}},2e3)},f=async()=>{if(!d){if(!a&&!l){o("Missing album or image identifier");return}n(!0),c("Starting labeling..."),_(0);try{const g=l?`/api/labeling/image/${l}`:`/api/labeling/album/${a}`,m={prompt_type:"sd_training",...a?{force:!1}:{}},L=await fetch(g,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify(m)}),i=await L.json().catch(()=>({}));if(L.status===202&&i.task_id)N(i.task_id),c("Labeling queued..."),b(i.task_id);else if(L.ok)c("Labeling complete!"),_(100),t&&await Promise.resolve(t()),setTimeout(()=>{c(""),T()},1500);else{const r=typeof i.error=="string"?i.error:"Labeling failed";o(r)}}catch(g){j.error("Labeling request failed:",g),o("Failed to start labeling task")}}};return u==="compact"?e.jsxs("div",{className:"labeling-panel compact",children:[e.jsx("button",{className:"labeling-trigger",onClick:()=>void f(),disabled:d,title:d?"Labeling in progress":"Label this image",children:d?"Labeling…":"Label image"}),s&&e.jsx("p",{className:"status-text",children:s})]}):e.jsxs("div",{className:"labeling-panel",children:[e.jsx("h3",{children:"🏷️ AI Labeling"}),e.jsxs("p",{className:"help-text",children:["Trigger Claude to caption, tag, and classify ",v,"."]}),e.jsxs("div",{className:"labeling-actions",children:[e.jsx("button",{className:"labeling-button",onClick:()=>void f(),disabled:d,children:d?"Labeling…":"Start Labeling"}),w&&e.jsxs("span",{className:"task-id","aria-live":"polite",children:["Task ID: ",w]})]}),e.jsxs("div",{className:"labeling-progress",children:[e.jsx("div",{className:"progress-bar",children:e.jsx("div",{className:"progress-fill",style:{width:`${x}%`}})}),s&&e.jsx("p",{className:"status-text",children:s})]})]})},U=a=>({images:a,selectedImages:new Set,nsfwSetting:"blur",labelInputs:{},editingLabel:null,labelError:null,loadingStates:{removingImages:!1,addingLabel:new Set,deletingLabel:new Set,editingLabel:!1},optimisticUpdates:{pendingLabelAdds:new Map,pendingLabelDeletes:new Set,pendingLabelEdits:new Map}}),C=(a,l)=>`${a}-${l}`;function F(a,l){switch(l.type){case"RESET":return U(l.images);case"TOGGLE_IMAGE_SELECTION":{const t=new Set(a.selectedImages);return t.has(l.imageId)?t.delete(l.imageId):t.add(l.imageId),{...a,selectedImages:t}}case"CLEAR_SELECTED_IMAGES":return{...a,selectedImages:new Set};case"SET_NSFW_SETTING":return{...a,nsfwSetting:l.setting};case"UPDATE_LABEL_INPUT":return{...a,labelInputs:{...a.labelInputs,[l.imageId]:l.value}};case"CLEAR_LABEL_INPUT":{const t={...a.labelInputs};return delete t[l.imageId],{...a,labelInputs:t}}case"SET_LABEL_ERROR":return{...a,labelError:l.error};case"START_EDITING_LABEL":return{...a,editingLabel:{imageId:l.imageId,labelId:l.labelId,value:l.value},labelError:null};case"UPDATE_EDITING_LABEL":return a.editingLabel?{...a,editingLabel:{...a.editingLabel,value:l.value}}:a;case"CANCEL_EDITING_LABEL":return{...a,editingLabel:null,labelError:null};case"OPTIMISTIC_ADD_LABEL":{const t=new Map(a.optimisticUpdates.pendingLabelAdds);return t.set(l.imageId,l.labelText),{...a,optimisticUpdates:{...a.optimisticUpdates,pendingLabelAdds:t}}}case"OPTIMISTIC_DELETE_LABEL":{const t=C(l.imageId,l.labelId),u=new Set(a.optimisticUpdates.pendingLabelDeletes);return u.add(t),{...a,optimisticUpdates:{...a.optimisticUpdates,pendingLabelDeletes:u}}}case"OPTIMISTIC_EDIT_LABEL":{const t=C(l.imageId,l.labelId),u=new Map(a.optimisticUpdates.pendingLabelEdits);return u.set(t,l.newText),{...a,optimisticUpdates:{...a.optimisticUpdates,pendingLabelEdits:u}}}case"CONFIRM_ADD_LABEL":{const t=new Map(a.optimisticUpdates.pendingLabelAdds);t.delete(l.imageId);const u=a.images.map(d=>d.id===l.imageId?{...d,labels:[...d.labels||[],l.newLabel],label_count:(d.label_count||0)+1,manual_label_count:(d.manual_label_count||0)+1}:d);return{...a,images:u,optimisticUpdates:{...a.optimisticUpdates,pendingLabelAdds:t}}}case"CONFIRM_DELETE_LABEL":{const t=C(l.imageId,l.labelId),u=new Set(a.optimisticUpdates.pendingLabelDeletes);u.delete(t);const d=a.images.map(n=>n.id===l.imageId?{...n,labels:(n.labels||[]).filter(s=>s.id!==l.labelId),label_count:Math.max((n.label_count||0)-1,0),manual_label_count:Math.max((n.manual_label_count||0)-1,0)}:n);return{...a,images:d,optimisticUpdates:{...a.optimisticUpdates,pendingLabelDeletes:u}}}case"CONFIRM_EDIT_LABEL":{const t=C(l.imageId,l.labelId),u=new Map(a.optimisticUpdates.pendingLabelEdits);u.delete(t);const d=a.images.map(n=>n.id===l.imageId?{...n,labels:(n.labels||[]).map(s=>s.id===l.labelId?{...s,label_text:l.newText}:s)}:n);return{...a,images:d,optimisticUpdates:{...a.optimisticUpdates,pendingLabelEdits:u}}}case"ROLLBACK_ADD_LABEL":{const t=new Map(a.optimisticUpdates.pendingLabelAdds);return t.delete(l.imageId),{...a,optimisticUpdates:{...a.optimisticUpdates,pendingLabelAdds:t}}}case"ROLLBACK_DELETE_LABEL":{const t=C(l.imageId,l.labelId),u=new Set(a.optimisticUpdates.pendingLabelDeletes);u.delete(t);const d=a.images.map(n=>n.id===l.imageId?{...n,labels:[...n.labels||[],l.originalLabel],label_count:(n.label_count||0)+1,manual_label_count:(n.manual_label_count||0)+1}:n);return{...a,images:d,optimisticUpdates:{...a.optimisticUpdates,pendingLabelDeletes:u}}}case"ROLLBACK_EDIT_LABEL":{const t=C(l.imageId,l.labelId),u=new Map(a.optimisticUpdates.pendingLabelEdits);u.delete(t);const d=a.images.map(n=>n.id===l.imageId?{...n,labels:(n.labels||[]).map(s=>s.id===l.labelId?{...s,label_text:l.originalText}:s)}:n);return{...a,images:d,optimisticUpdates:{...a.optimisticUpdates,pendingLabelEdits:u}}}case"SET_REMOVING_IMAGES":return{...a,loadingStates:{...a.loadingStates,removingImages:l.isLoading}};case"SET_ADDING_LABEL":{const t=new Set(a.loadingStates.addingLabel);return l.isLoading?t.add(l.imageId):t.delete(l.imageId),{...a,loadingStates:{...a.loadingStates,addingLabel:t}}}case"SET_DELETING_LABEL":{const t=C(l.imageId,l.labelId),u=new Set(a.loadingStates.deletingLabel);return l.isLoading?u.add(t):u.delete(t),{...a,loadingStates:{...a.loadingStates,deletingLabel:u}}}case"SET_EDITING_LABEL_LOADING":return{...a,loadingStates:{...a.loadingStates,editingLabel:l.isLoading}};case"UPDATE_IMAGES":return{...a,images:l.images};default:return a}}function $(a){const{albumId:l,initialImages:t,onRefresh:u,onRefreshAnalytics:d}=a,[n,s]=p.useReducer(F,t,U),c=p.useRef(null);p.useEffect(()=>(s({type:"RESET",images:t}),c.current&&c.current.abort(),c.current=new AbortController,()=>{c.current&&c.current.abort()}),[l,t]);const x=p.useCallback(async()=>{await Promise.all([u(),d()])},[u,d]),_=p.useCallback(i=>{s({type:"TOGGLE_IMAGE_SELECTION",imageId:String(i)})},[]),w=p.useCallback(i=>{s({type:"SET_NSFW_SETTING",setting:i})},[]),N=p.useCallback((i,r)=>{s({type:"UPDATE_LABEL_INPUT",imageId:i,value:r})},[]),I=p.useCallback(async()=>{var i;if(n.selectedImages.size!==0){s({type:"SET_REMOVING_IMAGES",isLoading:!0});try{const r=(i=c.current)==null?void 0:i.signal;await Promise.all(Array.from(n.selectedImages).map(y=>fetch(`/api/albums/${l}/images/${y}`,{method:"DELETE",credentials:"include",signal:r}).catch(E=>{E.name!=="AbortError"&&j.error(`Failed to remove image ${y}`,E)}))),s({type:"CLEAR_SELECTED_IMAGES"}),await x()}catch(r){r.name!=="AbortError"&&j.error("Failed to remove images",r)}finally{s({type:"SET_REMOVING_IMAGES",isLoading:!1})}}},[n.selectedImages,l,x]),v=p.useCallback(async i=>{var y;const r=(n.labelInputs[i]||"").trim();if(!r){s({type:"SET_LABEL_ERROR",error:"Label text cannot be empty."});return}s({type:"SET_LABEL_ERROR",error:null}),s({type:"SET_ADDING_LABEL",imageId:i,isLoading:!0}),s({type:"OPTIMISTIC_ADD_LABEL",imageId:i,labelText:r});try{const E=(y=c.current)==null?void 0:y.signal,h=await fetch(`/api/images/${i}/labels`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",signal:E,body:JSON.stringify({text:r,type:"manual"})});if(!h.ok){const A=await h.json().catch(()=>({}));throw new Error(typeof A.error=="string"?A.error:"Failed to add label")}const D=await h.json();s({type:"CONFIRM_ADD_LABEL",imageId:i,newLabel:D}),s({type:"CLEAR_LABEL_INPUT",imageId:i}),await x()}catch(E){if(E.name!=="AbortError"){s({type:"ROLLBACK_ADD_LABEL",imageId:i});const h=E instanceof Error?E.message:"Failed to add label";s({type:"SET_LABEL_ERROR",error:h}),j.error("Failed to add label:",E)}}finally{s({type:"SET_ADDING_LABEL",imageId:i,isLoading:!1})}},[n.labelInputs,x]),T=p.useCallback(async(i,r)=>{var h,D;if(!window.confirm("Remove this label?"))return;const y=n.images.find(A=>A.id===i),E=(h=y==null?void 0:y.labels)==null?void 0:h.find(A=>A.id===r);if(E){s({type:"SET_LABEL_ERROR",error:null}),s({type:"SET_DELETING_LABEL",imageId:i,labelId:r,isLoading:!0}),s({type:"OPTIMISTIC_DELETE_LABEL",imageId:i,labelId:r});try{const A=(D=c.current)==null?void 0:D.signal,S=await fetch(`/api/images/${i}/labels/${r}`,{method:"DELETE",credentials:"include",signal:A});if(!S.ok){const R=await S.json().catch(()=>({}));throw new Error(typeof R.error=="string"?R.error:"Failed to remove label")}s({type:"CONFIRM_DELETE_LABEL",imageId:i,labelId:r}),await x()}catch(A){if(A.name!=="AbortError"){s({type:"ROLLBACK_DELETE_LABEL",imageId:i,labelId:r,originalLabel:E});const S=A instanceof Error?A.message:"Failed to remove label";s({type:"SET_LABEL_ERROR",error:S}),j.error("Failed to remove label:",A)}}finally{s({type:"SET_DELETING_LABEL",imageId:i,labelId:r,isLoading:!1})}}},[n.images,x]),o=p.useCallback((i,r)=>{s({type:"START_EDITING_LABEL",imageId:i,labelId:r.id,value:r.label_text})},[]),b=p.useCallback(i=>{s({type:"UPDATE_EDITING_LABEL",value:i})},[]),f=p.useCallback(()=>{s({type:"CANCEL_EDITING_LABEL"})},[]),g=p.useCallback(async()=>{var D,A;if(!n.editingLabel)return;const i=n.editingLabel.value.trim();if(!i){s({type:"SET_LABEL_ERROR",error:"Label text cannot be empty."});return}const{imageId:r,labelId:y}=n.editingLabel,E=n.images.find(S=>S.id===r),h=(D=E==null?void 0:E.labels)==null?void 0:D.find(S=>S.id===y);if(h){s({type:"SET_LABEL_ERROR",error:null}),s({type:"SET_EDITING_LABEL_LOADING",isLoading:!0}),s({type:"OPTIMISTIC_EDIT_LABEL",imageId:r,labelId:y,newText:i});try{const S=(A=c.current)==null?void 0:A.signal,R=await fetch(`/api/images/${r}/labels/${y}`,{method:"PATCH",headers:{"Content-Type":"application/json"},credentials:"include",signal:S,body:JSON.stringify({text:i})});if(!R.ok){const B=await R.json().catch(()=>({}));throw new Error(typeof B.error=="string"?B.error:"Failed to update label")}s({type:"CONFIRM_EDIT_LABEL",imageId:r,labelId:y,newText:i}),s({type:"CANCEL_EDITING_LABEL"}),await x()}catch(S){if(S.name!=="AbortError"){s({type:"ROLLBACK_EDIT_LABEL",imageId:r,labelId:y,originalText:h.label_text});const R=S instanceof Error?S.message:"Failed to update label";s({type:"SET_LABEL_ERROR",error:R}),j.error("Failed to update label:",S)}}finally{s({type:"SET_EDITING_LABEL_LOADING",isLoading:!1})}}},[n.editingLabel,n.images,x]),m=p.useCallback(i=>n.loadingStates.addingLabel.has(i),[n.loadingStates.addingLabel]),L=p.useCallback((i,r)=>n.loadingStates.deletingLabel.has(C(i,r)),[n.loadingStates.deletingLabel]);return{state:n,actions:{toggleImageSelection:_,setNsfwSetting:w,updateLabelInput:N,removeSelectedImages:I,addLabel:v,deleteLabel:T,startEditingLabel:o,updateEditingLabel:b,cancelEditingLabel:f,saveEditedLabel:g},isLoading:{addingLabel:m,deletingLabel:L}}}const J=({isAdmin:a})=>{const l=G(),[t,u]=p.useState([]),[d,n]=p.useState(null),[s,c]=p.useState(!1),[x,_]=p.useState(null);P(b=>{w(b)},[]);const w=async b=>{try{const f=await k.albums.getAll(b),g=Array.isArray(f)?f.map(m=>({...m,id:String(m.id)})):[];u(g)}catch(f){if(f instanceof Error&&f.name==="AbortError")return;j.error("Failed to fetch albums:",f)}},N=async(b,f)=>{if(!a)return null;try{const g=await k.albums.getAnalytics(b,f);return _(g),g}catch(g){return g instanceof Error&&g.name==="AbortError"||(j.error("Failed to fetch album analytics:",g),_(null)),null}},I=async(b,f)=>{try{const m=await k.albums.getById(b,a,f),L=Array.isArray(m.images)?m.images.map(r=>{const E=(Array.isArray(r.labels)?r.labels:[]).map(h=>({id:Number(h.id),image_id:Number(h.image_id),label_text:h.label_text,confidence:h.confidence===null||typeof h.confidence>"u"?null:Number(h.confidence),label_type:h.label_type??null,source_model:h.source_model??null,source_prompt:h.source_prompt??null,created_by:h.created_by??null,created_at:h.created_at??null}));return{id:typeof r.id=="string"?parseInt(r.id,10):r.id,filename:r.filename,thumbnail_path:r.thumbnail_path??null,is_nsfw:r.is_nsfw,labels:E,label_count:typeof r.label_count=="number"?r.label_count:E.length,manual_label_count:typeof r.manual_label_count=="number"?r.manual_label_count:void 0}}):[],i={id:String(m.id),name:m.name,description:m.description,album_type:m.album_type,image_count:m.image_count??L.length,images:L};return n(i),a?await N(String(m.id)):_(null),i}catch(g){return g instanceof Error&&g.name==="AbortError"||(j.error("Failed to fetch album details:",g),_(null)),null}},v=async b=>{await I(b)},T=async(b,f,g="manual")=>{if(a)try{const m=await k.albums.create(b,f,g);m.success?(l.success("Album created successfully!"),w(),c(!1)):l.error("Failed to create album: "+(m.error??"Unknown error"))}catch(m){j.error("Failed to create album:",m),l.error("Error creating album")}},o=async b=>{if(a&&window.confirm("Are you sure you want to delete this album?"))try{const f=await k.albums.delete(b);f.success?(l.success("Album deleted successfully"),w(),(d==null?void 0:d.id)===b&&(n(null),_(null))):l.error("Failed to delete album: "+(f.error??"Unknown error"))}catch(f){j.error("Failed to delete album:",f),l.error("Error deleting album")}};return d?e.jsx(K,{album:d,onBack:()=>n(null),isAdmin:a,onDelete:o,onRefresh:()=>I(String(d.id)),analytics:x,onRefreshAnalytics:async()=>{await N(String(d.id))}}):e.jsxs("div",{className:"albums-tab",children:[e.jsxs("div",{className:"albums-header",children:[e.jsx("h2",{children:"Albums"}),a&&e.jsx("button",{className:"create-album-btn",onClick:()=>c(!0),children:"Create Album"})]}),e.jsx("div",{className:"albums-grid",children:t.map(b=>e.jsxs("div",{className:"album-card",onClick:()=>v(b.id),children:[e.jsx("div",{className:"album-cover",children:b.images&&b.images.length>0?e.jsx("img",{src:`/api/images/${b.images[0].id}/thumbnail`,alt:b.name}):e.jsxs("div",{className:"album-placeholder",children:[b.image_count||0," images"]})}),e.jsxs("div",{className:"album-info",children:[e.jsx("h3",{children:b.name}),e.jsx("p",{children:b.description||"No description"}),e.jsxs("div",{className:"album-meta",children:[e.jsxs("span",{children:[b.image_count||0," images"]}),e.jsx("span",{className:"album-type",children:b.album_type||"manual"}),a&&e.jsx("button",{className:"delete-album-btn",onClick:f=>{f.stopPropagation(),o(b.id)},children:"Delete"})]})]})]},b.id))}),t.length===0&&e.jsx("div",{className:"empty-state",children:e.jsxs("p",{children:["No albums yet. ",a?"Create your first album!":"Albums will appear here."]})}),s&&e.jsx(z,{onClose:()=>c(!1),onCreate:T})]})},K=({album:a,onBack:l,isAdmin:t,onRefresh:u,analytics:d,onRefreshAnalytics:n})=>{const{state:s,actions:c,isLoading:x}=$({albumId:a.id,initialImages:a.images||[],onRefresh:u,onRefreshAnalytics:n}),{images:_,selectedImages:w,nsfwSetting:N,labelInputs:I,editingLabel:v,labelError:T}=s;return e.jsxs("div",{className:"album-detail",children:[e.jsxs("div",{className:"album-detail-header",children:[e.jsx("button",{className:"back-btn",onClick:l,children:"← Back"}),e.jsx("h2",{children:a.name}),e.jsxs("div",{className:"nsfw-filter",children:[e.jsx("label",{children:"NSFW:"}),e.jsxs("select",{value:N,onChange:o=>c.setNsfwSetting(o.target.value),children:[e.jsx("option",{value:"hide",children:"Hide"}),e.jsx("option",{value:"blur",children:"Blur"}),e.jsx("option",{value:"show",children:"Show"})]})]}),t&&w.size>0&&e.jsxs("button",{className:"remove-images-btn",onClick:c.removeSelectedImages,children:["Remove ",w.size," images"]})]}),t&&T&&e.jsx("div",{className:"label-error",children:T}),t&&d&&e.jsxs("div",{className:"album-analytics",children:[e.jsxs("div",{className:"analytics-cards",children:[e.jsxs("div",{className:"analytics-card",children:[e.jsx("span",{className:"analytics-label",children:"Images"}),e.jsx("strong",{children:d.image_count})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("span",{className:"analytics-label",children:"Labeled"}),e.jsxs("strong",{children:[d.images_with_labels,"/",d.image_count]}),e.jsxs("small",{children:[d.coverage.labels_percent,"%"]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("span",{className:"analytics-label",children:"Manual Coverage"}),e.jsxs("strong",{children:[d.coverage.manual_percent,"%"]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("span",{className:"analytics-label",children:"Avg. Labels/Image"}),e.jsx("strong",{children:d.average_labels_per_image})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("span",{className:"analytics-label",children:"Unlabeled"}),e.jsx("strong",{children:d.unlabeled_images})]}),d.last_labeled_at&&e.jsxs("div",{className:"analytics-card",children:[e.jsx("span",{className:"analytics-label",children:"Last Labeled"}),e.jsx("strong",{children:new Date(d.last_labeled_at).toLocaleString()})]})]}),d.top_tags.length>0&&e.jsxs("div",{className:"analytics-top-tags",children:[e.jsx("h4",{children:"Top Tags"}),e.jsx("ul",{children:d.top_tags.map(o=>e.jsxs("li",{children:[e.jsx("span",{children:o.label_text}),e.jsx("span",{className:"tag-count",children:o.count})]},o.label_text))})]})]}),t&&e.jsx("div",{className:"album-actions",children:e.jsx(M,{albumId:a.id,onComplete:async()=>{await u(),await n()}})}),e.jsx("div",{className:"album-description",children:e.jsx("p",{children:a.description||"No description"})}),e.jsx("div",{className:"album-images-grid",children:_.map(o=>{const b=o.labels??[],f=String(o.id),g=I[o.id]??"",m=v&&v.imageId===o.id?v:null;return e.jsxs("div",{className:`image-card ${o.is_nsfw?"nsfw":""} ${N}`,onClick:()=>t&&c.toggleImageSelection(o.id),children:[t&&e.jsx("input",{type:"checkbox",checked:w.has(f),onChange:()=>c.toggleImageSelection(o.id),className:"image-checkbox"}),e.jsx("img",{src:`/api/images/${o.id}/thumbnail`,alt:o.filename,className:o.is_nsfw&&N==="blur"?"blurred":""}),o.is_nsfw&&e.jsx("div",{className:"nsfw-badge",children:"18+"}),b.length>0&&e.jsx("div",{className:"has-labels-badge",children:"🏷️"}),t&&e.jsxs(e.Fragment,{children:[e.jsx(M,{imageId:o.id,onComplete:async()=>{await u(),await n()},variant:"compact"}),e.jsxs("div",{className:"label-editor",children:[e.jsxs("div",{className:"label-chip-list",children:[b.length===0&&e.jsx("span",{className:"label-empty",children:"No labels yet."}),b.map(L=>{const i=m&&m.labelId===L.id,r=(L.label_type||"unknown").toLowerCase(),y=r==="caption",E=x.deletingLabel(o.id,L.id);return e.jsx("div",{className:`label-chip label-type-${r} ${i?"editing":""}`,children:i?e.jsxs(e.Fragment,{children:[e.jsx("input",{type:"text",value:(m==null?void 0:m.value)??"",onChange:h=>c.updateEditingLabel(h.target.value),disabled:s.loadingStates.editingLabel}),e.jsxs("div",{className:"label-chip-actions",children:[e.jsx("button",{type:"button",onClick:c.saveEditedLabel,disabled:s.loadingStates.editingLabel||!((m==null?void 0:m.value)??"").trim(),children:s.loadingStates.editingLabel?"Saving...":"Save"}),e.jsx("button",{type:"button",onClick:c.cancelEditingLabel,disabled:s.loadingStates.editingLabel,children:"Cancel"})]})]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{children:L.label_text}),e.jsxs("div",{className:"label-chip-actions",children:[!y&&e.jsx("button",{type:"button",onClick:()=>c.startEditingLabel(o.id,L),disabled:s.loadingStates.editingLabel,children:"Edit"}),e.jsx("button",{type:"button",onClick:()=>c.deleteLabel(o.id,L.id),disabled:E,children:E?"Removing...":"Remove"})]})]})},L.id)})]}),e.jsxs("form",{className:"label-add-form",onSubmit:L=>{L.preventDefault(),c.addLabel(o.id)},children:[e.jsx("input",{type:"text",placeholder:"Add manual tag",value:g,onChange:L=>c.updateLabelInput(o.id,L.target.value),disabled:x.addingLabel(o.id)}),e.jsx("button",{type:"submit",disabled:x.addingLabel(o.id)||!g.trim(),children:x.addingLabel(o.id)?"Adding...":"Add"})]})]})]})]},o.id)})}),_.length===0&&e.jsx("div",{className:"empty-album",children:e.jsx("p",{children:"This album is empty."})})]})},z=({onClose:a,onCreate:l})=>{const[t,u]=p.useState(""),[d,n]=p.useState(""),[s,c]=p.useState("manual"),x=_=>{_.preventDefault(),t.trim()&&l(t.trim(),d.trim(),s)};return e.jsx("div",{className:"dialog-overlay",onClick:a,children:e.jsxs("div",{className:"dialog",onClick:_=>_.stopPropagation(),children:[e.jsx("h2",{children:"Create Album"}),e.jsxs("form",{onSubmit:x,children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"album-name",children:"Album Name:"}),e.jsx("input",{id:"album-name",type:"text",value:t,onChange:_=>u(_.target.value),placeholder:"Enter album name",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"album-description",children:"Description:"}),e.jsx("textarea",{id:"album-description",value:d,onChange:_=>n(_.target.value),placeholder:"Enter album description (optional)",rows:3})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"album-type",children:"Album Type:"}),e.jsxs("select",{id:"album-type",value:s,onChange:_=>c(_.target.value),children:[e.jsx("option",{value:"manual",children:"Manual Collection"}),e.jsx("option",{value:"batch",children:"Generated Batch"}),e.jsx("option",{value:"set",children:"CSV Set"})]})]}),e.jsxs("div",{className:"dialog-actions",children:[e.jsx("button",{type:"submit",children:"Create Album"}),e.jsx("button",{type:"button",onClick:a,children:"Cancel"})]})]})]})})};export{J as default};

#!/bin/bash
# Pre-push hook to run code quality checks
# This hook runs flake8, black, and optionally pytest checks before allowing any push

set -e  # Exit on any error

echo "🔍 Running pre-push code quality checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

# Configuration
RUN_TESTS=${RUN_TESTS:-false}  # Set to true to run tests
QUICK_CHECK=${QUICK_CHECK:-false}  # Set to true for faster checks

# Check if we're in the right directory
if [ ! -f "requirements.txt" ] || [ ! -f "pyproject.toml" ]; then
    print_error "Not in project root directory. Please run from the project root."
    exit 1
fi

# Check if virtual environment is activated
if [ -z "$VIRTUAL_ENV" ]; then
    print_warning "Virtual environment not detected. Make sure to activate it first:"
    echo "  source venv/bin/activate"
    echo ""
fi

# Check if required tools are installed
check_tool() {
    if ! command -v "$1" &> /dev/null; then
        print_error "$1 is not installed or not in PATH"
        echo "Install with: pip install $1"
        exit 1
    fi
}

print_status "Checking required tools..."
check_tool "flake8"
check_tool "black"
check_tool "isort"

if [ "$RUN_TESTS" = "true" ]; then
    check_tool "pytest"
fi

# Run Black formatting check
print_status "Running Black formatting check..."
if ! black --check server/ src/ examples/; then
    print_error "Black formatting check failed!"
    echo ""
    echo "To fix formatting issues, run:"
    echo "  black server/ src/ examples/"
    echo ""
    echo "Then add and commit the changes:"
    echo "  git add ."
    echo "  git commit -m 'Fix Black formatting'"
    exit 1
fi

# Run isort import sorting check
print_status "Running isort import sorting check..."
if ! isort --check-only server/ src/ examples/; then
    print_error "isort import sorting check failed!"
    echo ""
    echo "To fix import sorting issues, run:"
    echo "  isort server/ src/ examples/"
    echo ""
    echo "Then add and commit the changes:"
    echo "  git add ."
    echo "  git commit -m 'Fix import sorting'"
    exit 1
fi

# Run Flake8 linting check
print_status "Running Flake8 linting check..."
if ! flake8 server/ src/ examples/ --max-line-length=100 --extend-ignore=E203,W503,C901,E501; then
    print_error "Flake8 linting check failed!"
    echo ""
    echo "Fix the linting errors above, then:"
    echo "  git add ."
    echo "  git commit -m 'Fix linting errors'"
    exit 1
fi

# Run tests if enabled
if [ "$RUN_TESTS" = "true" ]; then
    print_status "Running pytest tests..."
    if [ "$QUICK_CHECK" = "true" ]; then
        # Run only critical tests for quick feedback
        if ! python -m pytest tests/backend/test_phase5_training.py -v --tb=short; then
            print_error "Critical tests failed!"
            echo ""
            echo "Fix the test failures above, then:"
            echo "  git add ."
            echo "  git commit -m 'Fix test failures'"
            exit 1
        fi
    else
        # Run all tests
        if ! python -m pytest tests/ -v --tb=short; then
            print_error "Tests failed!"
            echo ""
            echo "Fix the test failures above, then:"
            echo "  git add ."
            echo "  git commit -m 'Fix test failures'"
            exit 1
        fi
    fi
fi

# All checks passed
print_status "All code quality checks passed! 🎉"
echo ""
echo "✅ Black formatting: OK"
echo "✅ isort import sorting: OK" 
echo "✅ Flake8 linting: OK"
if [ "$RUN_TESTS" = "true" ]; then
    echo "✅ Tests: OK"
fi
echo ""
print_status "Push allowed to proceed."

# Show helpful information
echo ""
print_info "Pre-push hook configuration:"
echo "  • RUN_TESTS=$RUN_TESTS (set to 'true' to run tests)"
echo "  • QUICK_CHECK=$QUICK_CHECK (set to 'true' for faster test runs)"
echo ""
echo "To customize, set environment variables:"
echo "  RUN_TESTS=true git push    # Run tests before push"
echo "  QUICK_CHECK=true git push  # Run quick tests only"
echo ""

exit 0
name: Code Quality & Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.12'

jobs:
  code-quality:
    name: Code Quality & Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov black flake8 isort mypy

      - name: Install frontend dependencies
        working-directory: ./web
        run: npm ci

      - name: Python Code Quality Checks
        run: |
          echo "Running Python code quality checks..."
          
          # Black formatting check
          echo "Checking code formatting with Black..."
          black --check server/ src/ examples/
          echo "âœ… Black formatting check passed"
          
          # isort import sorting check
          echo "Checking import sorting with isort..."
          isort --check-only server/ src/ examples/
          echo "âœ… isort import sorting check passed"
          
          # Flake8 linting
          echo "Running Flake8 linting..."
          flake8 server/ src/ examples/ --max-line-length=100 --extend-ignore=E203,W503,C901,E501
          echo "âœ… Flake8 linting passed"
          
          # MyPy type checking
          echo "Running MyPy type checking..."
          mypy server/ --ignore-missing-imports || true
          echo "âœ… MyPy type checking completed"

      - name: Node.js Code Quality Checks
        working-directory: ./web
        run: |
          echo "Running Node.js code quality checks..."
          
          # ESLint
          echo "Running ESLint..."
          npm run lint
          echo "âœ… ESLint passed"
          
          # TypeScript check (if applicable)
          if [ -f "tsconfig.json" ]; then
            echo "Running TypeScript check..."
            npx tsc --noEmit || true
            echo "âœ… TypeScript check completed"
          fi

      - name: Run Backend Tests with Coverage
        run: |
          echo "Running backend tests with coverage..."
          pytest tests/backend/ -v --cov=server --cov=src --cov-report=xml --cov-report=html --cov-report=term

      - name: Run Frontend Tests with Coverage
        working-directory: ./web
        run: |
          echo "Running frontend tests with coverage..."
          npm test -- --run --coverage

      - name: Upload Backend Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage

      - name: Upload Frontend Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./web/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

      - name: Generate Coverage Report
        run: |
          echo "Generating coverage report..."
          
          # Backend coverage summary
          if [ -f "coverage.xml" ]; then
            echo "## Backend Coverage Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Coverage report generated and uploaded to Codecov." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Frontend coverage summary
          if [ -f "web/coverage/lcov.info" ]; then
            echo "## Frontend Coverage Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Coverage report generated and uploaded to Codecov." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Code Quality Summary
        run: |
          echo "## Code Quality & Coverage âœ…" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Python Code Quality" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Black formatting check" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… isort import sorting" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Flake8 linting" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… MyPy type checking" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Node.js Code Quality" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… ESLint" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… TypeScript check (if applicable)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Backend test coverage" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Frontend test coverage" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Coverage reports uploaded to Codecov" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“Š Coverage Reports" >> $GITHUB_STEP_SUMMARY
          echo "Detailed coverage reports are available in the Codecov dashboard." >> $GITHUB_STEP_SUMMARY
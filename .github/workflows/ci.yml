name: PR Checks

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # Frontend checks run in parallel with backend
  frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: web
        run: npm ci

      # Run lint first - fails faster than tests
      - name: Lint
        working-directory: web
        run: npm run lint

      - name: Type check
        working-directory: web
        run: npm run tsc

      - name: Run tests
        working-directory: web
        run: npm test -- --run

  # Backend checks run in parallel with frontend
  backend:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 pytest-xdist

      # Run linters first - fail faster than tests
      - name: Format check (black)
        run: black --check server src examples tests

      - name: Lint (flake8)
        run: flake8 server src examples tests

      - name: Run tests (parallel)
        run: pytest -v -n auto
        env:
          IMAGINEER_OUTPUTS_DIR: /tmp/imagineer/outputs
          IMAGINEER_DATASET_ROOT: /tmp/imagineer/data/training

  # Summary job that requires both frontend and backend to pass
  verify:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
    steps:
      - name: All checks passed
        run: echo "âœ… All frontend and backend checks passed!"

  # Deploy job only runs on main branch
  deploy-tooling:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Build production bundle
        working-directory: web
        run: npm run deploy:build

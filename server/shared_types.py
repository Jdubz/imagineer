"""AUTO-GENERATED FILE. DO NOT EDIT.

Generated by scripts/generate_shared_types.py
"""

from __future__ import annotations

from typing import Any, Literal, NotRequired, Required, TypedDict


class AuthStatusTypedDict(TypedDict, total=False):
    """Response payload returned by /api/auth/me."""

    authenticated: Required[bool]
    email: NotRequired[str | None]
    name: NotRequired[str | None]
    picture: NotRequired[str | None]
    role: NotRequired[str | None]
    is_admin: NotRequired[bool | None]
    error: NotRequired[str | None]
    message: NotRequired[str | None]


class BugReportSubmissionRequestEnvironment(TypedDict, total=False):
    mode: Required[str]
    appVersion: NotRequired[str | None]
    gitSha: NotRequired[str | None]
    buildTime: NotRequired[str | None]


class BugReportSubmissionRequestClientmeta(TypedDict, total=False):
    locationHref: Required[str]
    userAgent: NotRequired[str]
    platform: NotRequired[str]
    language: NotRequired[str]
    locale: NotRequired[str]
    timezone: NotRequired[str]
    viewport: NotRequired[BugReportSubmissionRequestClientmetaViewport]


class BugReportSubmissionRequestRecentlogsItem(TypedDict, total=False):
    level: Required[str]
    message: Required[str]
    args: Required[list[Any]]
    timestamp: Required[str]
    serializedArgs: Required[list[Any]]


class BugReportSubmissionRequestNetworkeventsItem(TypedDict, total=False):
    id: Required[str]
    method: Required[str]
    url: Required[str]
    started_at: Required[str]
    completed_at: NotRequired[str | None]
    duration_ms: NotRequired[int | None]
    status: NotRequired[int | None]
    ok: NotRequired[bool | None]
    trace_id: NotRequired[str | None]
    requestHeaders: Required[list[BugReportSubmissionRequestNetworkeventsItemRequestheadersItem]]
    responseHeaders: Required[list[BugReportSubmissionRequestNetworkeventsItemResponseheadersItem]]
    requestBody: NotRequired[str | None]
    responseBody: NotRequired[str | None]
    error: NotRequired[str]


class BugReportSubmissionRequestClientmetaViewport(TypedDict, total=False):
    width: Required[int]
    height: Required[int]


class BugReportSubmissionRequestNetworkeventsItemRequestheadersItem(TypedDict, total=False):
    name: Required[str]
    value: Required[str]


class BugReportSubmissionRequestNetworkeventsItemResponseheadersItem(TypedDict, total=False):
    name: Required[str]
    value: Required[str]


class BugReportSubmissionRequestTypedDict(TypedDict, total=False):
    """Payload accepted by POST /api/bug-reports."""

    description: Required[str]
    environment: Required[BugReportSubmissionRequestEnvironment]
    clientMeta: Required[BugReportSubmissionRequestClientmeta]
    appState: Required[dict[str, Any]]
    recentLogs: Required[list[BugReportSubmissionRequestRecentlogsItem]]
    networkEvents: Required[list[BugReportSubmissionRequestNetworkeventsItem]]


class BugReportSubmissionResponseTypedDict(TypedDict, total=False):
    """Response returned by POST /api/bug-reports."""

    success: Required[bool]
    report_id: Required[str]
    trace_id: Required[str]
    stored_at: NotRequired[str | None]


class ImageMetadataLorasItem(TypedDict, total=False):
    path: Required[str]
    weight: Required[float]


class ImageMetadataTypedDict(TypedDict, total=False):
    """Generation metadata saved alongside generated images."""

    prompt: NotRequired[str]
    negative_prompt: NotRequired[str]
    seed: NotRequired[float]
    steps: NotRequired[float]
    guidance_scale: NotRequired[float]
    width: NotRequired[float]
    height: NotRequired[float]
    model: NotRequired[str]
    lora_path: NotRequired[str]
    lora_weight: NotRequired[float]
    loras: NotRequired[list[ImageMetadataLorasItem]]


class JobTypedDict(TypedDict, total=False):
    """Job state returned by image generation endpoints."""

    id: Required[int]
    status: Required[Literal["queued", "running", "completed", "failed", "cancelled"]]
    prompt: Required[str]
    queue_position: NotRequired[int | None]
    submitted_at: Required[str]
    started_at: NotRequired[str | None]
    completed_at: NotRequired[str | None]
    cancelled_at: NotRequired[str | None]
    created_at: NotRequired[str]
    created: NotRequired[str]
    output_path: NotRequired[str | None]
    output_filename: NotRequired[str]
    output_directory: NotRequired[str]
    output_dir: NotRequired[str]
    output: NotRequired[str]
    lora_paths: NotRequired[list[str]]
    lora_weights: NotRequired[list[float]]
    width: NotRequired[int]
    height: NotRequired[int]
    steps: NotRequired[int]
    seed: NotRequired[int]
    guidance_scale: NotRequired[float]
    negative_prompt: NotRequired[str]
    error: NotRequired[str | None]
    duration_seconds: NotRequired[float]
    estimated_time_remaining: NotRequired[float | None]
    album_id: NotRequired[int]
    batch_id: NotRequired[str]
    batch_item_name: NotRequired[str]
    batch_item_data: NotRequired[dict[str, Any]]


class JobsResponseTypedDict(TypedDict, total=False):
    """Envelope returned by GET /api/jobs."""

    current: Required[JobTypedDict | None]
    queue: Required[list[JobTypedDict]]
    history: Required[list[JobTypedDict]]

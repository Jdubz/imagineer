# Production Environment Configuration
# Copy this to .env.production and fill in your values

# Environment
FLASK_ENV=production
FLASK_DEBUG=false
FLASK_RUN_PORT=10050

# Security
ALLOWED_ORIGINS=https://imagineer-generator.web.app,https://imagineer-generator.firebaseapp.com
CLOUDFLARE_VERIFY=true

# Rate Limiting
RATELIMIT_ENABLED=true
RATELIMIT_STORAGE_URI=memory://

# Logging
LOG_LEVEL=INFO
LOG_FILE=/app/logs/api.log

# Auto-deployment webhook
WEBHOOK_SECRET=your-webhook-secret-here
GITHUB_REPO=yourusername/imagineer
DEPLOY_BRANCH=main
USE_DOCKER=true

# ============================================================================
# Google OAuth Configuration (Backend - for Authentication)
# ============================================================================
# Setup Instructions:
# 1. Go to Google Cloud Console: https://console.cloud.google.com
# 2. Create a project (or use existing)
# 3. Enable Google+ API
# 4. Go to Credentials > Create Credentials > OAuth 2.0 Client ID
# 5. Application type: Web application
# 6. Add authorized redirect URIs:
#    - Development: http://localhost:10050/auth/google/callback
#    - Production: https://imagineer.joshwentworth.com/auth/google/callback
# 7. Copy Client ID and Client Secret
#
# For production deployment, store these as GitHub secrets:
# - GOOGLE_CLIENT_ID
# - GOOGLE_CLIENT_SECRET
# - FLASK_SECRET_KEY

# Google OAuth Client ID
GOOGLE_CLIENT_ID=

# Google OAuth Client Secret (NEVER commit this!)
GOOGLE_CLIENT_SECRET=

# Flask Secret Key (for session encryption)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
FLASK_SECRET_KEY=

# ============================================================================

# Optional: Monitoring
# SENTRY_DSN=your-sentry-dsn
# DATADOG_API_KEY=your-datadog-key
